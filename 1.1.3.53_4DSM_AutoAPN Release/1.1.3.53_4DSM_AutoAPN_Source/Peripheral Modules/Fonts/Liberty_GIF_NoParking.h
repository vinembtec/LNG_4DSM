/*
 * Liberty_GIF_NoParking.h
 *
 *  Created on: Oct 20, 2016
 *      Author: admin
 */

#ifndef PERIPHERAL_MODULES_FONTS_LIBERTY_GIF_NOPARKING_H_
#define PERIPHERAL_MODULES_FONTS_LIBERTY_GIF_NOPARKING_H_


//fontgraph7:
//fontcharbytes16_graph7: = 0x1D1      // 465 bytes per char,Extra 0xFF fills to make it fixed array
//fontbyteswide_graph7: = n       // n bytes(variable) required for width of each char
//fontheight_graph7: = 0x40          //pixels in height

//const uint8_t fontGIF7[704]=
//{
//		0x02,0xBD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 0 RLE format
//		0x04,0x9A,0xC9,0x9A,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,     // Row 1 RLE format
//		0x04,0x95,0xD3,0x95,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,     // Row 2 RLE format
//		0x04,0x93,0xD7,0x93,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,     // Row 3 RLE format
//		0x04,0x91,0xDB,0x91,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,     // Row 4 RLE format
//		0x04,0x8F,0xDF,0x8F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,     // Row 5 RLE format
//		0x04,0x8D,0xE3,0x8D,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,     // Row 6 RLE format
//		0x04,0x8C,0xE5,0x8C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,     // Row 7 RLE format
//		0x06,0x8B,0xCE,0x8B,0xCE,0x8B,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 8 RLE format
//		0x06,0x8A,0xCC,0x91,0xCC,0x8A,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 9 RLE format
//		0x06,0x89,0xCB,0x95,0xCB,0x89,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 10 RLE format
//		0x06,0x88,0xCA,0x99,0xCA,0x88,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 11 RLE format
//		0x06,0x87,0xCA,0x9C,0xC9,0x87,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 12 RLE format
//		0x06,0x86,0xCB,0x9D,0xC9,0x86,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 13 RLE format
//		0x08,0x85,0xCD,0x7E,0xCF,0x87,0xC9,0x85,0xFF,0xFF,0xFF,    // Row 14 RLE format
//		0x08,0x85,0xCE,0x7E,0xD0,0x86,0xC8,0x85,0xFF,0xFF,0xFF,    // Row 15 RLE format
//		0x08,0x84,0xD0,0x7E,0xD1,0x85,0xC8,0x84,0xFF,0xFF,0xFF,    // Row 16 RLE format
//		0x08,0x84,0xD1,0x7E,0xD1,0x85,0xC7,0x84,0xFF,0xFF,0xFF,    // Row 17 RLE format
//		0x0A,0x83,0xC8,0x7C,0xC4,0x7E,0xD0,0x85,0xC8,0x83,0xFF,    // Row 18 RLE format
//		0x0A,0x83,0xC7,0x84,0xC9,0x7E,0xD0,0x85,0xC7,0x83,0xFF,    // Row 19 RLE format
//		0x0A,0x7C,0xC3,0x85,0xC9,0x7E,0xD0,0x84,0xC8,0x82,0xFF,    // Row 20 RLE format
//		0x0A,0x7C,0x03,0x7C,0xC4,0x8E,0xC8,0x85,0xC7,0x82,0xFF,    // Row 21 RLE format
//		0x0A,0x7C,0x03,0x83,0xC9,0x8E,0xC8,0x84,0xC8,0x81,0xFF,    // Row 22 RLE format
//		0x0A,0x7E,0x01,0x84,0xC9,0x8D,0xC8,0x85,0xC7,0x81,0xFF,    // Row 23 RLE format
//		0x0A,0x7E,0x01,0x85,0xC9,0x8C,0xC8,0x85,0xC7,0x81,0xFF,    // Row 24 RLE format
//		0x0A,0x7E,0x01,0x86,0xC9,0x8B,0xC8,0x85,0xC7,0x81,0xFF,    // Row 25 RLE format
//		0x0B,0x7E,0x01,0x85,0x7D,0xC4,0x8A,0xC7,0x87,0xC6,0x81,    // Row 26 RLE format
//		0x09,0xC7,0x8C,0x7B,0xC5,0x88,0xC8,0x87,0xC7,0xFF,0xFF,    // Row 27 RLE format
//		0x0A,0xC7,0x8C,0xC3,0x7E,0xC3,0x7E,0xC8,0x87,0xC7,0xFF,    // Row 28 RLE format
//		0x0A,0xC7,0x8C,0xC4,0x7E,0xC3,0x7E,0xC6,0x88,0xC7,0xFF,    // Row 29 RLE format
//		0x0A,0xC7,0x8C,0xC5,0x7E,0xC3,0x7E,0xC5,0x88,0xC7,0xFF,   // Row 30 RLE format
//		0x0A,0xC7,0x8C,0xC6,0x7E,0xC3,0x7E,0xC3,0x89,0xC7,0xFF,    // Row 31 RLE format
//		0x0A,0xC7,0x8C,0xC7,0x7E,0xC3,0x7E,0x01,0x84,0xC7,0xFF,    // Row 32 RLE format
//		0x09,0xC7,0x8C,0xC8,0x7E,0xC3,0x3E,0x8A,0xC7,0xFF,0xFF,    // Row 33 RLE format
//		0x09,0xC7,0x8C,0xC9,0x7E,0xC3,0x0E,0x89,0xC7,0xFF,0xFF,    // Row 34 RLE format
//		0x08,0xC7,0x8C,0xCA,0x7E,0xC3,0x8F,0xC7,0xFF,0xFF,0xFF,    // Row 35 RLE format
//		0x09,0x7E,0x01,0x85,0xC7,0x85,0xC9,0x8E,0xC7,0xFF,0xFF,    // Row 36 RLE format
//		0x0A,0x7E,0x01,0x85,0xC7,0x86,0xC9,0x8C,0xC7,0x81,0xFF,    // Row 37 RLE format
//		0x0A,0x7E,0x01,0x85,0xC7,0x87,0xC9,0x8B,0xC7,0x81,0xFF,    // Row 38 RLE format
//		0x0A,0x7E,0x01,0x85,0xC7,0x88,0xC9,0x8A,0xC7,0x81,0xFF,    // Row 39 RLE format
//		0x0A,0x7C,0x03,0x85,0xC7,0x89,0xC9,0x88,0xC8,0x81,0xFF,    // Row 40 RLE format
//		0x0A,0x7C,0x03,0x85,0xC7,0x8A,0xC9,0x87,0xC7,0x82,0xFF,    // Row 41 RLE format
//		0x0A,0x7C,0xC3,0x89,0xC7,0x8B,0xC9,0x85,0xC8,0x82,0xFF,    // Row 42 RLE format
//		0x0A,0x83,0xC7,0x89,0xC7,0x8C,0xC9,0x84,0xC7,0x83,0xFF,    // Row 43 RLE format
//		0x0A,0x83,0xC8,0x88,0xC7,0x8D,0xC9,0x7C,0xC3,0x83,0xFF,    // Row 44 RLE format
//		0x08,0x84,0xC7,0x88,0xC7,0x8E,0xD1,0x84,0xFF,0xFF,0xFF,    // Row 45 RLE format
//		0x08,0x84,0xC8,0x87,0xC7,0x8F,0xD0,0x84,0xFF,0xFF,0xFF,    // Row 46 RLE format
//		0x08,0x85,0xC8,0x86,0xC7,0x90,0xCE,0x85,0xFF,0xFF,0xFF,    // Row 47 RLE format
//		0x08,0x85,0xC9,0x85,0xC7,0x91,0xCD,0x85,0xFF,0xFF,0xFF,    // Row 48 RLE format
//		0x06,0x86,0xC9,0x9D,0xCB,0x86,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 49 RLE format
//		0x06,0x87,0xC9,0x9D,0xC9,0x87,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 50 RLE format
//		0x06,0x88,0xCA,0x99,0xCA,0x88,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 51 RLE format
//		0x06,0x89,0xCB,0x96,0xCB,0x88,0xFF,0xFF,0xFF,0xFF,0xFF,   // Row 52 RLE format
//		0x06,0x8A,0xCC,0x91,0xCD,0x89,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 53 RLE format
//		0x06,0x8B,0xCE,0x8B,0xCF,0x8A,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 54 RLE format
//		0x04,0x8C,0xE5,0x8C,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 55 RLE format
//		0x04,0x8D,0xE3,0x8D,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 56 RLE format
//		0x04,0x8F,0xDF,0x8F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 57 RLE format
//		0x04,0x90,0xDD,0x90,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 58 RLE format
//		0x04,0x93,0xD8,0x92,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 59 RLE format
//		0x04,0x95,0xD3,0x95,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 60 RLE format
//		0x04,0x99,0xCB,0x99,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 61 RLE format
//		0x04,0x99,0xCB,0x99,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,    // Row 62 RLE format
//		0x02,0xBD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF    // Row 63 RLE format

//};

#endif /* PERIP,ERAL_MODULES_DISPLAY_LIBERTY_GIF_NOPARKING_,_ */
